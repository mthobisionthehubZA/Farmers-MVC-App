@model PagedList.IPagedList<Farmers_App.Models.FARMER>

@*To support the paged list view*@ 

@using PagedList.Mvc;
@using PagedList;


@{
    ViewBag.Title = "Index";
}

<style>

    .custom-table {
        border: 1px solid grey;
    }

        .custom-table th {
            background-color: grey;
            color: white;
        }

    .btn-edit {
        background-color: darkslategrey;
        color: #fff; /* for white text color */
    }

    .btn-delete {
        background-color: grey;
        color: #fff; /* for white text color */
    }

    .btn-search{
        background-color: darkslategrey;
        color: #fff; /* for white text color */
    }

    /* Pagination CSS Code: */
    .pagination-container {
        display: flex;
        justify-content:center;
        margin-top: 20px;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .pagination li {
            margin-right: 5px;
        }

        .pagination a {
            text-decoration: none;
            padding: 8px 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: darkgrey; /* Grey background */
            color: #fff;
        }

            .pagination a:hover {
                background-color: darkslategrey; /* darkslategry hover color */
                color: #fff;
                border-color: darkslategrey;
            }

        .pagination .disabled a {
            pointer-events: none;
            background-color: #ddd;
            color: #aaa;
            border-color: #ddd;
        }
</style>

@using (Html.BeginForm("Index", "Farmer", FormMethod.Get))
{
    <p>
        <span class="input-group-addon"><i class="fa fa-search" style="font-size: 22px;"></i></span>
        <input type="text" name="searchString" />
        <input type="submit" value="Search" class="btn btn-search" />
    </p>


    <table class="table table-hover table-responsive custom-table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Village_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FARM_TYPES.TYPE_OF_FARMING)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().GENDER1.GENDER1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().PROVINCE1.PROVINCE1)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Village_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FARM_TYPES.TYPE_OF_FARMING)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GENDER1.GENDER1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PROVINCE1.PROVINCE1)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.UserID }, new { @class = "btn btn-edit" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.UserID }, new { @class = "btn btn-delete" })
                </td>
            </tr>
        }

    </table>
    <div class="pagination-container">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = Request.QueryString["search"] }))
    </div>
}

